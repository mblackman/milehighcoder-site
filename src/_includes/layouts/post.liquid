---
layout: layouts/default.liquid
---

{% block head %}
  {{ parent }} 
  <link href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css" rel="stylesheet" />
{% endblock %}

<article class="prose">
  <header class="post-header">
    <h1 class="post-title">{{ title }}</h1>
    <div class="post-time">
      <time datetime="{{ post.date }}">
        {{ page.date | date : "%a, %b %d, %Y" }}
      </time>
    </div>
  </header>

  {{ content }}
</article>

{% assign similar = collections.posts | similarPosts: page.inputPath, tags %} {%
if similar.length > 0 %}
<section class="related">
  <h2 class="related-title">You might also enjoy</h2>
  <ul class="related-posts">
    {% for post in similar limit: 2 %}
    <li>
      <a class="related-article" href="{{ post.url }}">
        <h3 class="related-article-title">{{ post.data.title }}</h3>
        <p class="related-article-description">
          {{ post.data.description }}
        </p>
      </a>
    </li>
    {% endfor %}
  </ul>
</section>
{% endif %} 

<div class="divider">Comments</div>
<div id="utterances-block"></div>

<script>
function updateUtterancesTheme(isDark) {
    const utterances = document.querySelector('.utterances-frame');
    if (utterances) {
        const theme = isDark
          ? '{{site.utterances.darkTheme}}'
          : '{{site.utterances.lightTheme}}';
        utterances.contentWindow.postMessage({
          type: 'set-theme',
          theme: theme
          }, 'https://utteranc.es'
        );
    }
};

document.addEventListener('DOMContentLoaded', function() {
  const theme = localStorage.theme === '{{ site.darkTheme }}'
		? '{{site.utterances.darkTheme}}'
		: '{{site.utterances.lightTheme}}';
	const utterancesScript = document.createElement('script');
	utterancesScript.src = 'https://utteranc.es/client.js';
	utterancesScript.setAttribute('repo', '{{site.utterances.repo}}');
	utterancesScript.setAttribute('issue-term', '{{site.utterances.issueTerm}}');
	{% if site.utterances.label %}
        utterancesScript.setAttribute('label', '{{site.utterances.label}}');
	{% endif %}
	utterancesScript.async = true;
  utterancesScript.crossOrigin = 'anonymous';
  utterancesScript.setAttribute('theme', theme); 

	const utterancesContainer = document.getElementById('utterances-block');
  utterancesContainer.appendChild(utterancesScript);

	document.addEventListener('themeChanged', function(event) {
		updateUtterancesTheme(event.detail.isDark);
	});
});
</script>